

1. 面向对象内容的三条主线：
-Java类及类的成员：(重点）属性、方法、构造器 代码块 内部类
- 面向对象的特征：封装 继承 多态（抽象）
- 其他关键字的使用：this、super、package、import、static、final、interface、abstract等

2. 面向过程编程(POP)  vs  面向对象编程(OOP)
2.1 简单的语言描述二者的区别
> 面向过程：Process-Oriented Programming
       - 以`函数`为组织单位。
       - 是一种“`执行者思维`”，适合解决简单问题。扩展能力差、后期维护难度较大。
> 面向对象：Object-Oriented Programming
        - 以`类`为组织单位。每种事物都具备自己的`属性`和`行为/功能`。
        - 是一种“`设计者思维`”，适合解决复杂问题。代码扩展性强、可维护性高。

2.2 二者关系：
相辅相成

3.
> 面向对象编程的两个核心概念：类（Class）、对象（Object）
> 谈谈对这两个概念的理解？
   类:具有相同特征的事物的抽象描述，是`抽象的`、概念上的定义。
   对象：实际存在的该类事物的`每个个体`，是`具体的`，因而也称为`实例(instance)`。

4. 类的声明与使用
4.1 体会：设计类，其实就是...

4.2 类的内部成员一、二：



4.3 类的实例化
等价描述：
格式：
举例：



5. 面向对象完成具体功能的操作的三步流程（非常重要）





